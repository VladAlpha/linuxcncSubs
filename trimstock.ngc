(info:  trim subroutine)
o<trimstock> sub

#<tool> = #1    (=0 Tool | 0 == current)
#<rot> = #2     (=0 Spindle Rotation 3= CW 4 = CCW)
#<feedtype> = #3 (=0 NON-FUNC climb = 1 conv = 2)
#<rpm> = #4     (=0 RPM | 0 == current)
#<feed> = #5    (=0 feed | 0 == current)
#<sop> = #6     (=50 percent stepover)
#<dop> = #7     (=75 percent z step)
#<finish> = #8  (=10 percent finish stepover)
#<zsafe> = #9   (=0.1 pre/post travel height)
#<xpos> = #10    (=0 x start position)
#<ypos> = #11   (=0 y start position)
#<zstart> = #12 (=0 start height of feature)
#<zend> = #13   (=-1 bottom location)
#<startangle> = #14     (=90 angle of first side)
#<endangle> = #15       (=90 angle of second side)
#<xlength> = #16        (=5 length along x axis)
#<ylength> = #17        (=1 length along y axis)
#<xrawlength> = #18     (=5.5 actual length)

(set or modify or retain machine settings)
    o30 if [#<tool> gt 0] (set tool)
        M6 T#<tool>
        o30 endif
    o31 if [#<rot> gt 0] (start spindle )
        M#<rot>
        o31 endif
    o33 if [#<rpm> gt 0] (set spindle speed)
        S#<rpm>
        o33 endif
    o34 if [#<feed> gt 0]
        F#<feed>
        o34 endif
(o2n error checking)
    o20 if [#5410 eq 0]
    (msg, YOU MUST LOAD A NON 0 TOOL: FAIL AT TEMPLATE)
    m2
    o20 endif
(usefull variable set)
    #<tooldiam> = #5410
    #<toolrad> = [#5410/2]
    #<step> = [#<tooldiam>*#<sop>/100]
    #<finish> = [#<tooldiam>*#<finish>/100]
    #<doc> = [#<tooldiam>*#<dop>/100]
    #<passes> = fup[[#<zstart>-#<zend>]/#<doc>]
    #<doc>= [[#<zstart>-#<zend>]/#<passes>]

    #<m1> = [tan[#<startangle>]]
    #<d1> = [#<toolrad>*#<m1>/[sqrt[#<m1>**2]]]
    #<b1a> = [#<ypos>-[#<xpos>*tan[#<startangle>]]] (eq of stock B term)
    #<b1b> = [[#<d1>]*sqrt[#<m1>**2+1]+#<b1a>] (eq of cut b term)
    #<m2> = [tan[#<endangle>]]
    #<d2> = [-[#<toolrad>+[#<xrawlength>-#<xlength>]*sin[#<endangle>]]*#<m2>/[sqrt[#<m2>**2]]]
    #<b2a> = [#<ypos>-[#<xpos>+#<xlength>]*#<m2>]
    #<b2b> = [[#<d2>]*sqrt[#<m2>**2+1]+#<b2a>]
    (debug, m2 #<m2>)
    (debug, b2a #<b2a>)
    (debug, b2b #<b2b>)

    #<chipdist> = [[#<xrawlength>-#<xlength>]*sin[#<endangle>]-#<finish>]
    #<roughpasses> = fup[[#<chipdist>]/#<step>]
    #<step>= [[#<chipdist>]/#<roughpasses>]
    

    #<y1> = [#<ypos>-#<toolrad>]
    #<x1> = [[#<y1>-#<b1b>]/#<m1>]
    #<y2> = [#<ypos>+#<ylength>+#<toolrad>]
    #<x2> = [[#<y2>-#<b1b>]/#<m1>]
    #<y3> = #<y2>
    #<x3> = [#<y3>-#<b2b>/#<m2>]
    #<y4> = #<y1>
    #<x4> = [#<y4>-#<b2b>/#<m2>]
    
    #<count> = 0

G00 Z#<zsafe>
G00 X#<x1> Y#<y1>
G01 Z#<zstart>
o<firstside> while [#<count> lt #<passes>]
    G91 G01 Z[-#<doc>]
    G90 G01 X#<x2> Y#<y2>
    #<count> = [#<count>+1]
    o<firstsidenest> if [#<count> lt #<passes>]
        G91 G01 Z[-#<doc>]
        G90 G01 X#<x1> Y#<y1>
        #<count> = [#<count>+1]
    o<firstsidenest> endif
o<firstside> endwhile
G00 Z#<zsafe>
G00 X#<x3> Y#<y3>
M1  (pause just in case)
G00 Z#<zstart>

#<count> = 0
#<roughcount> = 0

o<roughdown> while [#<roughcount> lt #<roughpasses>]
    o<secondside> while [#<count> lt #<passes>]
        G91 G01 Z[-#<doc>]
        G90 G01 X#<x4> Y#<y4>
        #<count> = [#<count>+1]
        o<secondsidenest> if [#<count> lt #<passes>]
            G91 G01 Z[-#<doc>]
            G90 G01 X#<x3> Y#<y3>
            #<count> = [#<count>+1]
        o<secondsidenest> endif
    o<secondside> endwhile
    #<count> = 0
    G00 Z#<zstart>
    #<roughcount> = [#<roughcount>+1]
    #<d2> = [#<d2>+#<step>*#<roughcount>*#<m2>/[sqrt[#<m2>**2]]]
    #<b2b> = [[#<d2>]*sqrt[#<m2>**2+1]+#<b2a>] (eq of cut b term)
    #<y3> = [#<y2>]
    #<x3> = [#<y3>-#<b2b>/#<m2>]
    #<y4> = #<y1>
    #<x4> = [#<y4>-#<b2b>/#<m2>]
o<roughdown> endwhile
G00 Z#<zstart>

#<d2> = [-#<toolrad>*#<m2>/[sqrt[#<m2>**2]]]
#<b2b> = [[#<d2>]*sqrt[#<m2>**2+1]+#<b2a>]
#<y3> = [#<y2>]
#<x3> = [#<y3>-#<b2b>/#<m2>]
#<y4> = #<y1>
#<x4> = [#<y4>-#<b2b>/#<m2>]

#<count> = 0
o<secondsidefinal> while [#<count> lt #<passes>]
    G91 G01 Z[-#<doc>]
    G90 G01 X#<x4> Y#<y4>
    #<count> = [#<count>+1]
    o<secondsidenestfinal> if [#<count> lt #<passes>]
        G91 G01 Z[-#<doc>]
        G90 G01 X#<x3> Y#<y3>
        #<count> = [#<count>+1]
    o<secondsidenestfinal> endif
o<secondsidefinal> endwhile
G00 Z#<zsafe>

o<trimstock> endsub