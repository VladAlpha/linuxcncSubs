(Sub routine by Vlad for tracing the outside of a box)
(based on one corner and vectors out to next corner, so sign is relative to axis)
(note the locations and vectors are based on the true corners, ie X of sides)
(not the center of the radiused corners, IE a rectangle with and without radiused)
(corners has the same vectors and start location)

o<boxcut> sub
#<tool> = #1    (=0 Tool | 0 == current)
#<rot> = #2     (=0 Spindle Rotation 3= CW 4 = CCW)
#<feedtype> = #3 (=0 climb = 1 conv = 2)
#<rpm> = #4     (=0 RPM | 0 == current)
#<feed> = #5    (=0 feed | 0 == current)
#<sop> = #6     (=50 UNUSED)
#<dop> = #7     (=25 percent z step)
#<finish> = #8  (=10 percent finish stepover)
#<zsafe> = #9   (=0.1 pre/post travel height)
#<xpos> = #10   (=0 x position)
#<ypos> = #11   (=0 y position)
#<zstart> = #12 (=0 start height of feature)
#<zend> = #13   (=-1 bottom location)
#<xvect> = #14 	(=1.1024: X Length)
#<yvect> = #15	(=1.3386: Y Length) 
#<orient> = #16 (=1 1 pocket 2 block)
#<radius> = #17 (=0 corner radius, 0 disables)


#<tooldiam> = #5410
#<toolrad> = [#5410/2]
#<xend> = [#<xpos>+#<xvect>]
#<yend> = [#<ypos>+#<yvect>]
#<xsign> = [#<xvect>/abs[#<xvect>]] (get sign of vectors for radius)
#<ysign> = [#<yvect>/abs[#<yvect>]]
#<doc> = [#<tooldiam>*#<dop>/100]
#<passes> = [fup[[#<zstart>-#<zend>]/#<doc>]]
#<doc> = [[#<zstart>-#<zend>]/#<passes>] (set doc to optimised value)
F#<feed>

o<set> if [#<orient> eq 1]
    o<quad> if [#<xsign>+#<ysign> eq 0]
        G41
    o<quad> else
        G42
    o<quad> endif
o<set> elseif [#<orient> eq 2]
    o<quad> if [#<xsign>+#<ysign> eq 0]
        G42
    o<quad> else
        G41
    o<quad> endif
o<set> endif

(set or modify or retain machine settings)
    o30 if [#<tool> gt 0] (set tool)
        M6 T#<tool>
        o30 endif
    o31 if [#<rot> gt 0] (start spindle )
        M#<rot>
        o31 endif
    o33 if [#<rpm> gt 0] (set spindle speed)
        S#<rpm>
        o33 endif
    o34 if [#<feed> gt 0]
        F#<feed>
        o34 endif
(o2n error checking)
    o20 if [#5410 eq 0]
    (msg, YOU MUST LOAD A NON 0 TOOL: FAIL AT boxcut)
    m2
    o20 endif

G40
G00 Z#<zsafe>
G00 X[#<xpos>-#5410] y#<ypos>

#<zgo> = #<zstart>
G01 Z#<zstart> X#<xpos>

o<nofillet> if [#<radius> eq 0]
    o<rampdown> repeat [#<passes>+1]
        #<zgo> =[ #<zgo>-#<doc>]
        o<finishpass> if [#<zgo> lt #<zend>]
            #<zgo>=#<zend>
        o<finishpass> endif
        G01 X#<xend> Z[#<zgo>]
        G01 Y#<yend>
        G01 X#<xpos>
        G01 Y#<ypos>
    o<rampdown> endrepeat

    G01 X#<xend>
    G01 Y[#<ypos>+#5410/2]
o<nofillet> endif

o<fillet> if [#<radius> gt 0]

    o<filletRampdown> repeat [#<passes>+1]
        #<ysvect> = [#<yvect>-2*#<radius>]
        #<xsvect> = [#<xvect>-2*#<radius>]
        #<xsstart> = [#<xpos>+[#<xsign>*#<radius>]] (straight segment start)
        #<xsend> = [#<xend>-[#<xsign>*#<radius>]]
        #<ysstart> = [#<ypos>+[#<ysign>*#<radius>]] (straight segment start)
        #<ysend> = [#<yend>-[#<ysign>*#<radius>]]
     
        #<zgo> = [#<zgo>-#<doc>]
        o<finishpass> if [#<zgo> lt #<zend>]
            #<zgo>=#<zend>
        o<finishpass> endif

        o<rotdir> if [#<xsign>+#<ysign> eq 0]   (this covers 2 of 4 cases CW)
            
            G01 X#<xsstart> Y#<ypos>
            G01 X#<xsend> Z#<zgo> (end of first straight less radius)
            G02 X#<xend> Y#<ysstart> J[#<radius>*#<ysign>]    (first corner)
            G01 Y#<ysend>
            G02 x#<xsend> Y#<yend> I[-#<radius>*#<xsign>]   (second corner)
            G01 x#<xsstart>
            G02 X#<xpos> Y#<ysend> J[-#<radius>*#<ysign>]   (third corner)
            G01 Y#<ysstart>                                 (last straight)
            G02 X#<xsstart> Y#<ypos> I[#<radius>*#<xsign>]  (4th corner)
        o<rotdir> else                          (CCW path direction)
            G01 X#<xsstart> Y#<ypos>
            G01 X#<xsend> Z#<zgo> (end of first straight less radius)
            G03 X#<xend> Y#<ysstart> J[#<radius>*#<ysign>]    (first corner)
            G01 Y#<ysend>
            G03 x#<xsend> Y#<yend> I[-#<radius>*#<xsign>]   (second corner)
            G01 x#<xsstart>
            G03 X#<xpos> Y#<ysend> J[-#<radius>*#<ysign>]   (third corner)
            G01 Y#<ysstart>                                 (last straight)
            G03 X#<xsstart> Y#<ypos> I[#<radius>*#<xsign>]  (4th corner)
        o<rotdir> endif
    o<filletRampdown> endrepeat
    G01 X[#<xsend>-#<toolrad>*#<xsign>]  (finish)
o<fillet> endif

G00 Z#<zsafe>

G40

o<boxcut> endsub