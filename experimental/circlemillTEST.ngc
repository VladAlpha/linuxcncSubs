g17 (xy plane)
g20 (inches)
g40 (cancel cutter radius compensation)
g49 (cancel tool lengthoffset)
g90 (absolute distance mode)
g94 (units/min feedrate)
g54 (Coordinate system 1 default)
#<tol>  = 0.001
g64 p#<tol> (path control stop)
 #1 =    8
 #2 =    0
 #3 =    0
 #4 =    0
 #5 =   20
 #6 =   25
 #7 =   25
 #8 =  0.1
 #9 =    0
#10 =    0
#11 = 0.05
#12 = -0.5
#13 =    1
#14 =   10


(info: Vlad's circle milling subroutine for ngcgui)
(helical plunge into material, up to stepover but half normal DOC)
(max tool diam == hole diam/1.25-2*finish)

#<tool> = #1    (=0 Tool | 0 == current)
#<rot> = #2     (=0 Spindle Rotation 3= CW 4 = CCW)
#<feedtype> = #3 (=0 climb = 1 conv = 2)
#<rpm> = #4     (=0 RPM | 0 == current)
#<feed> = #5    (=0 feed | 0 == current)
#<sop> = #6     (=30 stepover percent)
#<docp> = #7    (=25 percent z step)
#<zsafe> = #8   (=0.1 pre/post travel height)
#<x> = #9    (x position)
#<y> = #10   (y position)
#<zstart> = #11 (=0.05 start height of feature)
#<zend> = #12   (=-1: Bottom Z height) 
#<od> = #13     (diameter of milled hole)
#<finish> = #14 (=4: finish stepover, .010 for .25 tool)

#<tooldiam> = #5410
#<toolrad> = [#5410/2]
#<doc> = [#<tooldiam>*#<docp>/100]
#<step> = [#<tooldiam>*#<sop>/100]
#<z_curr> = [#<zstart>-#<doc>]  (convenient var for Z height)
#<finish> = [#<tooldiam>*#<finish>/100] (finish cut depth)
#<finishrad> = [[#<od>-2*#<finish>]/2]  (rad of hole prior to finish)

(set or modify or retain machine settings)
    o30 if [#<tool> gt 0] (set tool)
        M6 T#<tool>
        o30 endif
    o31 if [#<rot> gt 0] (start spindle )
        M#<rot>
        o31 endif
    o33 if [#<rpm> gt 0] (set spindle speed)
        S#<rpm>
        o33 endif
    o34 if [#<feed> gt 0]
        F#<feed>
        o34 endif
(if depth can be done in one pass, reset z_curr)
    o10 if [#<z_curr> lt #<zend>]
    #<z_curr> = #<zend>
    o10 endif
(o2n error checking)
    o20 if [#<tooldiam> eq 0]
    (msg, YOU MUST LOAD A NON 0 TOOL: FAIL AT CIRCLEMILL)
    m2
    o20 endif
    o22 if [#<tooldiam> gt [1.20*#<od>+2*#<finish>]]
    (msg, TOOL TOO LARGE: FAIL AT CIRCLEMILL)
    m2
    o22 endif
(set plunge radius and initialize rad)
    #<plungerad> = [#<toolrad>+#<step>/2]
    (if plunge is larger than finish, set to finish)
        o<plungeset> if [#<plungerad> gt #<finishrad>]
        #<plungerad> = #<finishrad>
        o<plungeset> endif
    #<rad> = #<plungerad>

G40
G00 Z#<zsafe>
G00 X#<x> Y#<y>     (go to center)
G92 X0 Y0           (set temp coordinate around center)
G00 X[#<toolrad>] Y[-#<toolrad>] (prime for simple leadin 5 oclock park)
G41 (cut starts inside, left comp CW cutter and CW 02 arc)

G01 X0 Y#<rad> Z#<zstart>                      (lower to 12 start pos, also leadin)

o<layers> while [#<z_curr> ge #<zend>]         (if not too deep)
(plunge down)
    G03 X-#<rad> Y0 J-#<rad>                   ()
    G03 I#<rad> Z#<z_curr> P2                 (ramp down in and cut circle)
    G03 X0 Y#<rad> J-#<rad> Z#<z_curr>         (circle to 12)
    (no cleanup pass, possible island scenario?)
    #<startRad> = #<rad>                            (save old value to shorten eqs)
    #<rad> = [#<rad>+#<step>]                       (set rad to next pass)

    o<expandingbulk> while [#<rad> le [[#<od>/2]-#<finish>]]    (keep pushing out, evals to final not cur dim)
        G03 X-#<rad> Y0 I[[#<rad>*#<rad>-#<startRad>*#<startRad>]/[-2*#<rad>]] J-[#<startRad>]  (arc out to 9)
        G03 X0 Y#<rad> I#<rad>                 (3/4 circle to 12)
        o<exitexpanding> if [[#<rad>+#<step>] lt [[#<od>/2]-#<finish>]] (check if next cut is <=od-finish, if so increment)
        #<startRad> = #<rad>                    (save old value to shorten eqs)
        #<rad> = [#<rad>+#<step>]               (keeps change nested but avoids extra final)
        o<exitexpanding> elseif [#<rad> eq [[#<od>/2]-#<finish>]]  (last rough was done, finish him!)
        #<startRad> = #<rad>                        (save it)
        #<rad> = [[#<od>/2]]                        (set to final value)
        G03 X-#<rad> Y0 I[[#<rad>*#<rad>-#<startRad>*#<startRad>]/[-2*#<rad>]] J-[#<startRad>]  (arc out to 9)
        G03 X0 Y#<rad> I#<rad>                 (3/4 circle to 12)
        G03 X0 Y-#<rad> J-#<rad>                    (finish cut)
        o<exitexpanding> else (next cut would have landed in finish region, so snap to)
        #<startRad> = #<rad>                        (save it)
        #<rad> = [[#<od>/2]-#<finish>]              (set to final rough value)
        o<exitexpanding> endif
    o<expandingbulk> endwhile

    #<startRad>=#<rad>
    #<rad> = [#<plungerad>]              (reset goal rad)
    G00 X-#<rad> Y0                      (go to inner start pos)

(set next layer height, if finished sets layer below final height)
    o<zcontrol> if [[#<z_curr>-#<doc>] gt #<zend>]   (if next cut makes sense but wont finish)
    #<z_curr> = [#<z_curr>-#<doc>]
    o<zcontrol> elseif [#<z_curr> eq #<zend>]          (if this cut just finished)
    #<z_curr> = [#<zend>-1]    (set excessive to quit)
    o<zcontrol> elseif [[#<z_curr>-#<doc>] le #<zend>]   (if next cut finishes or is excessive, force finish)
    #<z_curr> = #<zend>
    o<zcontrol> endif
o<layers> endwhile

G00 Z#<zsafe>
G00 X#<x> Y#<y>
G92.1 G40


m2
